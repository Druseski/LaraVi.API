// <auto-generated />
using System;
using LaraVi.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaraVi.API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210504202546_InitialSeed")]
    partial class InitialSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaraVi.API.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Zacini"
                        });
                });

            modelBuilder.Entity("LaraVi.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BestBefore")
                        .HasColumnType("datetime2")
                        .HasMaxLength(10);

                    b.Property<bool>("ByPeace")
                        .HasColumnType("bit");

                    b.Property<bool>("ByWeight")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOFOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateManifactured")
                        .HasColumnType("datetime2")
                        .HasMaxLength(10);

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(1500)")
                        .HasMaxLength(1500);

                    b.Property<string>("Manifacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Popularity")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasMaxLength(10);

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Shipping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoldItems")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BestBefore = new DateTime(2020, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ByPeace = false,
                            ByWeight = true,
                            CategoryID = 1,
                            CategoryName = "Zacini",
                            CountryOFOrigin = "Kurgistan",
                            DateAdded = new DateTime(2021, 5, 4, 22, 25, 46, 385, DateTimeKind.Local).AddTicks(7653),
                            DateManifactured = new DateTime(2019, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Discription = "Nane moze da se upotrebuva i kako caj i kako zacin",
                            Manifacturer = "Po Doma",
                            Name = "Nane",
                            PhotoURL = "12x12x20",
                            Popularity = false,
                            Price = 198.0,
                            Rating = 4.2999999999999998,
                            Shipping = "Koga ke mozam",
                            SoldItems = 50,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("LaraVi.API.Entities.Product", b =>
                {
                    b.HasOne("LaraVi.API.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
